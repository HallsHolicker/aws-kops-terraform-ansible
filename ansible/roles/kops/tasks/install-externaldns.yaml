# - name: Copy externaldns-aws-r53-policy.json
#   copy:
#     src: externaldns-aws-r53-policy.json
#     dest: /tmp/externaldns-aws-r53-policy.json

# - name: Get Account ID
#   shell: "aws sts get-caller-identity --query 'Account' --output text"
#   register: getAccountID

# - name: Check External DNS IAM Policy Exists
#   shell: "aws iam get-policy --policy-arn arn:aws:iam::{{ getAccountID.stdout }}:policy/AllowExternalDNSUpdate"
#   register: checkExternalDnsIamPolicyExists
#   ignore_errors: true

# - name: Create externaldns-aws-r53-policy.json
#   shell: "aws iam create-policy --policy-name AllowExternalDNSUpdate --policy-document file:///tmp/externaldns-aws-r53-policy.json"
#   when: checkExternalDnsIamPolicyExists.failed

# - name: Attach IAM Policy to master
#   shell: "aws iam attach-role-policy --policy-arn arn:aws:iam::{{ getAccountID.stdout }}:policy/AllowExternalDNSUpdate --role-name masters.{{ cluster_name }}"
#   # when: checkExternalDnsIamPolicyExists.failed

# - name: Attach IAM Policy to node
#   shell: "aws iam attach-role-policy --policy-arn arn:aws:iam::{{ getAccountID.stdout }}:policy/AllowExternalDNSUpdate --role-name nodes.{{ cluster_name }}"
#   # when: checkExternalDnsIamPolicyExists.failed

- name: Download Kops Cluster Config File
  shell: "kops get cluster --state=s3://{{ s3_name }} -o yaml > {{ cluster_name }}.yaml"

# - name: Backup dns-controller deployment
#   shell: "kubectl get deploy dns-controller -n kube-system -o yaml > dns-controller.yaml"

- name: Check externaldns exists
  shell: "cat {{ cluster_name }}.yaml | grep externalDns | wc -l"
  register: checkExternaldnsExists

- name: Edit Kops Cluster Config file for externaldns 
  lineinfile:
    path: "{{ cluster_name }}.yaml"
    insertafter: EOF
    line: "{{ item }}"
  loop:
    - "  externalDns:"
    - "    provider: external-dns"
  register: changeStatusExternalDnsTrue
  when: checkExternaldnsExists.stdout == '0'

- name: Replace Kops Cluster Config
  shell: "kops replace -f {{ cluster_name }}.yaml --state=s3://{{ s3_name }}"
  when: changeStatusExternalDnsTrue.changed

- name: Update Kops Cluster Config
  shell: "kops update cluster --state=s3://{{ s3_name }} --yes && sleep 3"
  when: changeStatusExternalDnsTrue.changed

- name: Rolling-update Kops Cluster
  shell: "kops rolling-update cluster --state=s3://{{ s3_name }}"
  when: changeStatusExternalDnsTrue.changed

# - name: Delete dns-controller deployment
#   shell: "kubectl delete deploy dns-controller -n kube-system"

- name: Check External DNS
  shell: "kubectl get pods -n kube-system -l k8s-app=external-dns | grep Running | wc -l"
  register: checkExternalDnsStatus
  until: checkExternalDnsStatus.stdout == "1"
  retries: 30
  delay: 10
  when: changeStatusExternalDnsTrue.changed